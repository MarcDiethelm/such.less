// MEDIA QUERIES
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

@phone: ~'(max-width: 600px)';
@tablet: ~'(min-width: 601px) and (max-width: 900px)';
@tablet-and-down: ~'(max-width: 900px)';
@tablet-and-up: ~'(min-width: 601px)';
@desktop: ~'(min-width: 901px)';

/**
 * RESPONSIVE LAYOUTS
 *
 * Some notes:
 * - always use the direct child selector for columns so nested layouts don't interfere
 * - for grid layouts with different span sizes use incrementing .col-(num) classes and apply sizes to these classes
 * - use the #responsive > .cleared-columns([column-count]) mixin to easily and properly set up all same width columns within a responsive layout.
 *   Note that you must distinguish different viewports through their media query here because it may generate different :nth-child selectors
 **/

#responsive {
	// grid-max-cols from responsibly
	@max-cols: @grid-max-cols;

	// simple mixin to clear float on every new grid line
	.cleared-columns(@columns) {
		> .col {
			.col-span(@max-cols / @columns);

			&:nth-child(@{columns}n+1) {
				clear: left;
			}
		}
	}
}

.layout-responsive-1 {
	/**
	* specs: max cols 12
	* desktop: 4
	* tablet: 6
	* phone: 12
	**/

	> .col {
		.col-span(12);
	}

	@media @tablet {
		#responsive > .cleared-columns(2);
	}

	@media @desktop {
		#responsive > .cleared-columns(3);
	}
}

.layout-responsive-2 {
	/**
	* specs: max cols 12
	* desktop: 6
	* tablet: 12
	* phone: 12
	**/

	> .col {
		.col-span(12);
	}

	@media @desktop {
		#responsive > .cleared-columns(2);
	}
}

.layout-responsive-3 {
	/**
	* specs:
	* desktop: 8/4
	* tablet: 8/4
	* phone: 12
	**/

	> .col {
		.col-span(12);
	}

	@media @tablet-and-up {
		> .col-1 {
			.col-span(8);
		}

		> .col-2 {
			.col-span(4);
		}
	}
}

.layout-responsive-4 {
	/**
	* specs:
	* desktop: 3
	* tablet: 6
	* phone: 12
	**/

	> .col {
		.col-span(12);
	}

	@media @tablet {
		#responsive > .cleared-columns(2);
	}

	@media @desktop {
		#responsive > .cleared-columns(4);
	}
}

.layout-nogrid-1 {
	/**
	* specs:
	* desktop: 7
	* tablet: 5
	* phone: 5
	**/

	> .col {
		.col-span(@grid-max-cols / 5);
	}

	@media @desktop {
		> .col {
			.col-span(@grid-max-cols / 7);
		}
	}
}