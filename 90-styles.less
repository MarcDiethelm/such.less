/**
 * Define everything project bound that you don't feel to be setup in here
 * e.g. global style objects, maybe rich text styles etc.
 **/


// RICH TEXT
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

.text {
	h1, h1& {
		&:extend(.title-page.spaced);
	}
	h2, h2& {
		&:extend(.title-default.spaced);
	}
	h3, h3& {
		&:extend(.title-sub.spaced);
	}

	p, p& {
		margin: 1.5em 0;
	}
}


// CLASSES
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

.debug {
	font-family: @font-monospace;
	font-size: smaller;
}


// DEMO STUFF
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Dependencies:
// - 00-variables.less

.such-demo:extend(.text all) {
	// richtext-style linking
	.setup:extend(.text h3) {
		display: inline-block;
	}

	h2 {
		margin: 2em 0 1em;
		padding-top: .5em;
		display: block;
		border-top: 1px solid lighten(@color-copy, 50%);
	}

	th {
		text-align: left;
		padding-right: 3.5em;
		vertical-align: top;
	}
	th, td {
		padding-top: .175em;
		padding-bottom: .175em;
		border-bottom: 1px dotted lighten(@color-copy, 40%);
	}
	td {
		font-weight: bold;
	}
	th, ._reset {
		font-weight: normal;
	}
	.g-col {
		margin-bottom: 1em;

		> span:extend(.wf-box) {
			display: block;
			overflow: hidden;
		}
	}
	._type:after {
		content: '@{grid-type}';
	}
	._max-width:after {
		content: '@{max-content-width}';
	}
	._gutter-width:after {
		content: '@{grid-gutter}';
	}
	._gutter-type:after {
		content: '@{gutter-type}';
	}
	._gutter-width-percent:after {
		@grid-gutter-width-percent: round(percentage(@grid-gutter / (@max-content-width + @grid-gutter)), 3);
		content: '@{grid-gutter-width-percent}';
	}
	hr {
		border: none;
		border-bottom: 1px solid lighten(@color-copy, 50%);
	}
}
